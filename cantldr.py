#!/usr/bin/env python3
# cantldr.py by jerkey
# opens ks_can2serial canbus logs generated by https://github.com/jerkey/ks_can/blob/teslalog/ks_can2serial.ino
inFile = open('/tmp/can2serial.txt')
RESET  = '\033[0m' # https://misc.flogisoft.com/bash/tip_colors_and_formatting
GREEN  = '\033[32m'
RED    = '\033[31m'
YELLOW = '\033[33m'

ids = [530,546,770,924,930] # list of CAN IDs we care about
lastMsg = ['                                                                     '] * len(ids) # empty so it's not too short to compare with

for line in inFile: # '268:00000000B3000000 16\n' is what a line looks like
    if line.find('CAN')!=0: # swallow the init lines from ks_can2serial.ino
        id = int(line.split(':')[0],16)
        if id in ids: # we ignore CAN IDs not in our list
            idIndex = ids.index(id)
            data = line.split(' ')[0][4:20]
            data = data[0:4]+' '+data[4:8]+' '+data[8:12]+' '+data[12:16] # add spaces for readability
            if lastMsg[idIndex] != data: # ignore messages that haven't changed since we last saw them
                print(str(id)+'\t',end='')
                for i in range(len(data)): # print character by character, colored according to same or changed
                    if lastMsg[idIndex][i]==data[i]:
                        print(RESET+data[i],end='')
                    else:
                        print(RED+data[i],end='')
                for i in range(len(data),20): # pad data with spaces out to 20 characters
                        print(' ',end='')
                linetime = int(line[:-1].split(' ')[1]) # get the time in milliseconds from the log
                mins = int(linetime / (1000*60))
                secs = linetime % 60000 / 1000
                lastMsg[idIndex] = data # store the latest data to compare with for next time
                print('\t'+YELLOW+str(mins).zfill(3)+':',end='') # print the number of minutes:
                if secs < 10:
                    print('0',end='')
                print(str(secs)+RESET) # print the number of seconds (a float) and ANSI RESET
